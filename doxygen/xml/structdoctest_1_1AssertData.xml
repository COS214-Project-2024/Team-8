<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structdoctest_1_1AssertData" kind="struct" language="C++" prot="public">
    <compoundname>doctest::AssertData</compoundname>
    <derivedcompoundref refid="structdoctest_1_1detail_1_1ResultBuilder" prot="public" virt="non-virtual">doctest::detail::ResultBuilder</derivedcompoundref>
    <innerclass refid="classdoctest_1_1AssertData_1_1StringContains" prot="public">doctest::AssertData::StringContains</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1ab26ee6e05feaefc982c4f5481458cbda" prot="public" static="no" mutable="no">
        <type>const <ref refid="structdoctest_1_1TestCaseData" kindref="compound">TestCaseData</ref> *</type>
        <definition>const TestCaseData* doctest::AssertData::m_test_case</definition>
        <argsstring></argsstring>
        <name>m_test_case</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="827" column="24" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="827" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1a0b3b2866b13ba048c0beea51bd798749" prot="public" static="no" mutable="no">
        <type>assertType::Enum</type>
        <definition>assertType::Enum doctest::AssertData::m_at</definition>
        <argsstring></argsstring>
        <name>m_at</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="828" column="25" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="828" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1ac22c9ed0d8c6edec58c4b26a0a00e714" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* doctest::AssertData::m_file</definition>
        <argsstring></argsstring>
        <name>m_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="829" column="24" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="829" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1a1142f5fb5d171964b7677a9d23f81548" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int doctest::AssertData::m_line</definition>
        <argsstring></argsstring>
        <name>m_line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="830" column="25" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="830" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1af8fe9e24ffba3f575c7384a85f96297a" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* doctest::AssertData::m_expr</definition>
        <argsstring></argsstring>
        <name>m_expr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="831" column="24" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="831" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1ac9ddaf3e6532fdadba3c1f74eb931d4a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool doctest::AssertData::m_failed</definition>
        <argsstring></argsstring>
        <name>m_failed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="832" column="25" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="832" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1a3e9d4c7eeff7c4fe310b0597bf7027b8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool doctest::AssertData::m_threw</definition>
        <argsstring></argsstring>
        <name>m_threw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="835" column="12" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="835" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1a1fdbef933ef26c0bc174f9ec716924cd" prot="public" static="no" mutable="no">
        <type><ref refid="classdoctest_1_1String" kindref="compound">String</ref></type>
        <definition>String doctest::AssertData::m_exception</definition>
        <argsstring></argsstring>
        <name>m_exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="836" column="12" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="836" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1a1c6b5804b7dd4d8ba70126cb598f30bd" prot="public" static="no" mutable="no">
        <type><ref refid="classdoctest_1_1String" kindref="compound">String</ref></type>
        <definition>String doctest::AssertData::m_decomp</definition>
        <argsstring></argsstring>
        <name>m_decomp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="839" column="12" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="839" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1ace744d365532d299052c8a80a63f7079" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool doctest::AssertData::m_threw_as</definition>
        <argsstring></argsstring>
        <name>m_threw_as</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="842" column="20" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="842" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1a1c476dc606780aefdb7db2d7ca146199" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* doctest::AssertData::m_exception_type</definition>
        <argsstring></argsstring>
        <name>m_exception_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="843" column="19" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="843" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structdoctest_1_1AssertData_1a86c189116f12eccc2d3362ec6d8862f4" prot="public" static="no" mutable="no">
        <type>class DOCTEST_INTERFACE <ref refid="classdoctest_1_1AssertData_1_1StringContains" kindref="compound">doctest::AssertData::StringContains</ref></type>
        <definition>class DOCTEST_INTERFACE doctest::AssertData::StringContains doctest::AssertData::m_exception_string</definition>
        <argsstring></argsstring>
        <name>m_exception_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="859" column="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structdoctest_1_1AssertData_1ae1f9906888c2dd06b6291ab196f5074e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>doctest::AssertData::AssertData</definition>
        <argsstring>(assertType::Enum at, const char *file, int line, const char *expr, const char *exception_type, const StringContains &amp;exception_string)</argsstring>
        <name>AssertData</name>
        <param>
          <type>assertType::Enum</type>
          <declname>at</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>exception_type</declname>
        </param>
        <param>
          <type>const <ref refid="classdoctest_1_1AssertData_1_1StringContains" kindref="compound">StringContains</ref> &amp;</type>
          <declname>exception_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="861" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>doctest::detail::ResultBuilder</label>
        <link refid="structdoctest_1_1detail_1_1ResultBuilder"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>doctest::AssertData</label>
        <link refid="structdoctest_1_1AssertData"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>doctest::String::view</label>
      </node>
      <node id="5">
        <label>doctest::AssertData::StringContains</label>
        <link refid="classdoctest_1_1AssertData_1_1StringContains"/>
      </node>
      <node id="2">
        <label>doctest::TestCaseData</label>
        <link refid="structdoctest_1_1TestCaseData"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_file</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>doctest::AssertData</label>
        <link refid="structdoctest_1_1AssertData"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_test_case</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>m_decomp</edgelabel>
          <edgelabel>m_exception</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_exception_string</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>doctest::String</label>
        <link refid="classdoctest_1_1String"/>
        <childnode refid="4" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" line="824" column="1" bodyfile="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/doctest.h" bodystart="825" bodyend="863"/>
    <listofallmembers>
      <member refid="structdoctest_1_1AssertData_1ae1f9906888c2dd06b6291ab196f5074e" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>AssertData</name></member>
      <member refid="structdoctest_1_1AssertData_1a0b3b2866b13ba048c0beea51bd798749" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_at</name></member>
      <member refid="structdoctest_1_1AssertData_1a1c6b5804b7dd4d8ba70126cb598f30bd" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_decomp</name></member>
      <member refid="structdoctest_1_1AssertData_1a1fdbef933ef26c0bc174f9ec716924cd" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_exception</name></member>
      <member refid="structdoctest_1_1AssertData_1a86c189116f12eccc2d3362ec6d8862f4" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_exception_string</name></member>
      <member refid="structdoctest_1_1AssertData_1a1c476dc606780aefdb7db2d7ca146199" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_exception_type</name></member>
      <member refid="structdoctest_1_1AssertData_1af8fe9e24ffba3f575c7384a85f96297a" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_expr</name></member>
      <member refid="structdoctest_1_1AssertData_1ac9ddaf3e6532fdadba3c1f74eb931d4a" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_failed</name></member>
      <member refid="structdoctest_1_1AssertData_1ac22c9ed0d8c6edec58c4b26a0a00e714" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_file</name></member>
      <member refid="structdoctest_1_1AssertData_1a1142f5fb5d171964b7677a9d23f81548" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_line</name></member>
      <member refid="structdoctest_1_1AssertData_1ab26ee6e05feaefc982c4f5481458cbda" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_test_case</name></member>
      <member refid="structdoctest_1_1AssertData_1a3e9d4c7eeff7c4fe310b0597bf7027b8" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_threw</name></member>
      <member refid="structdoctest_1_1AssertData_1ace744d365532d299052c8a80a63f7079" prot="public" virt="non-virtual"><scope>doctest::AssertData</scope><name>m_threw_as</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
