<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Citizen_8cpp" kind="file" language="C++">
    <compoundname>Citizen.cpp</compoundname>
    <includes refid="Citizen_8h" local="yes">Citizen.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="36">
        <label>BestRouteNode.h</label>
        <link refid="BestRouteNode_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>AccesibleRoute.h</label>
        <link refid="AccesibleRoute_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Utility.h</label>
        <link refid="Utility_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>PopulationControl.h</label>
        <link refid="PopulationControl_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Government.h</label>
        <link refid="Government_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>CitizenInterface.h</label>
        <link refid="CitizenInterface_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>Plane.h</label>
        <link refid="Plane_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>CommercialBuilding.h</label>
        <link refid="CommercialBuilding_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>MapIterator.h</label>
        <link refid="MapIterator_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Buildings.h</label>
        <link refid="Buildings_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="33">
        <label>VehicleBuilder.h</label>
        <link refid="VehicleBuilder_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Transport.h</label>
        <link refid="Transport_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/Citizen.cpp</label>
        <link refid="Citizen_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>State.h</label>
        <link refid="State_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>Stops.h</label>
        <link refid="Stops_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>EnergySource.h</label>
        <link refid="EnergySource_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>TransportBuilder.h</label>
        <link refid="TransportBuilder_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="24">
        <label>UnderConstruction.h</label>
        <link refid="UnderConstruction_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="27">
        <label>TravelManager.h</label>
        <link refid="TravelManager_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Citizen.h</label>
        <link refid="Citizen_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>RouteNode.h</label>
        <link refid="RouteNode_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>PublicServiceBuilding.h</label>
        <link refid="PublicServiceBuilding_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="34">
        <label>Vehicle.h</label>
        <link refid="Vehicle_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Command.h</label>
        <link refid="Command_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>chrono</label>
      </node>
      <node id="28">
        <label>PlaneBuilder.h</label>
        <link refid="PlaneBuilder_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>thread</label>
      </node>
      <node id="21">
        <label>MedicalCenter.h</label>
        <link refid="MedicalCenter_8h_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>TrainBuilder.h</label>
        <link refid="TrainBuilder_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ResidentialBuilding.h</label>
        <link refid="ResidentialBuilding_8h_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>Train.h</label>
        <link refid="Train_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Citizen.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="classCitizen_1a91ae6c7a53461fd446dfd2dac4d66cb7" kindref="member">Citizen::Citizen</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>salary,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>age,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>satisfaction,</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGovernment" kindref="compound">Government</ref>*<sp/>government,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEmployed,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ownsProperty)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>name(name),<sp/>salary(salary),<sp/>satisfaction(satisfaction),<sp/>age(age),</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isEmployed(isEmployed),<sp/>ownsProperty(ownsProperty){</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>currTaxRate<sp/>=<sp/>0.10f;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Citizen<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>been<sp/>created<sp/>with<sp/>a<sp/>salary<sp/>of<sp/>$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>salary<sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>age<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>age<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>satisfaction<sp/>level<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>satisfaction<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>employment<sp/>status:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(isEmployed<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Employed&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Unemployed&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>property<sp/>ownership<sp/>status:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(ownsProperty<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Owner&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>an<sp/>owner&quot;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classTravelManager" kindref="compound">TravelManager</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="classCitizen_1a91ae6c7a53461fd446dfd2dac4d66cb7" kindref="member">Citizen::Citizen</ref>(std::string<sp/>name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>salary,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>age,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>satisfaction)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="classCitizen" kindref="compound">Citizen</ref>(name,<sp/>salary,<sp/>age,<sp/>satisfaction,<sp/>nullptr)<sp/>{}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">std::unique_ptr&lt;CitizenInterface&gt;<sp/><ref refid="classCitizen_1ade11673566d466af3e785829df29a484" kindref="member">Citizen::clone</ref>()<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCitizen_1a7bd549ced2bbacc03708cd412609c7a6" kindref="member">popControl</ref>-&gt;increasePopulation();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_unique&lt;Citizen&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><ref refid="classCitizen_1aca7dce04dd6e6d2abb0638cadbfd1632" kindref="member">Citizen::~Citizen</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Citizen<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>been<sp/>destroyed.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>delete<sp/>tm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tm<sp/>=<sp/>nullptr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Citizen::getTaxRate()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classCitizen_1a523b77626b92a4a866ebf490dc3f7f35" kindref="member">currTaxRate</ref><sp/>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a0898b8b98a35a1744d5d4c235ab4681d" kindref="member">Citizen::addKnownLocations</ref>(<ref refid="classStops" kindref="compound">Stops</ref><sp/>*stop)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>tm-&gt;<ref refid="classTravelManager_1acca4e31ec9819790fc13cb6080ed3c68" kindref="member">addStops</ref>(stop);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a8e8aa3ad0de003d19a835f7cb2972e2b" kindref="member">Citizen::update</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newTaxRate)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>updating<sp/>tax<sp/>rate<sp/>from<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1a523b77626b92a4a866ebf490dc3f7f35" kindref="member">currTaxRate</ref><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>newTaxRate<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCitizen_1a523b77626b92a4a866ebf490dc3f7f35" kindref="member">currTaxRate</ref><sp/>=<sp/>newTaxRate;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newTaxRate<sp/>&gt;<sp/><ref refid="classCitizen_1a523b77626b92a4a866ebf490dc3f7f35" kindref="member">currTaxRate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCitizen_1a68c89f916d8b94096d89d7b605e959cb" kindref="member">adjustCitizenSatisfaction</ref>(-5);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>feels<sp/>the<sp/>pinch<sp/>of<sp/>higher<sp/>taxes.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCitizen_1a68c89f916d8b94096d89d7b605e959cb" kindref="member">adjustCitizenSatisfaction</ref>(5);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>pleased<sp/>with<sp/>the<sp/>lower<sp/>tax<sp/>rate!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a913dbea7ecf2b87951908c9554db652a" kindref="member">Citizen::makeRequest</ref>(<ref refid="classGovernment" kindref="compound">Government</ref>*<sp/>government,<sp/>std::string<sp/>requestDetails)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCitizen_1ac88789754b747ec5746485055958d9fc" kindref="member">government</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>making<sp/>a<sp/>request<sp/>to<sp/>the<sp/>government:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>requestDetails<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCitizen_1ac88789754b747ec5746485055958d9fc" kindref="member">government</ref>-&gt;<ref refid="classGovernment_1a8ebf14df569730e97b7016af3a00a0fc" kindref="member">handleRequest</ref>(requestDetails);<sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>first<sp/>object<sp/>in<sp/>chain<sp/>and<sp/>set<sp/>successors<sp/>in<sp/>main</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[Citizen]<sp/>Government<sp/>does<sp/>not<sp/>exist.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a7431f43a1090664ca3a0c75f1860c7f4" kindref="member">Citizen::useTransport</ref>(<ref refid="classStops" kindref="compound">Stops</ref><sp/>*stop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>capacity,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bestRoute)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bestRoute){</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm-&gt;<ref refid="classTravelManager_1ad6f91d50ae036a8f602ff820f4aea4d2" kindref="member">BestRoute</ref>(capacity,stop);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm-&gt;Travel(capacity,stop);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a68c89f916d8b94096d89d7b605e959cb" kindref="member">Citizen::adjustCitizenSatisfaction</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newSatisfaction)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>+=<sp/>newSatisfaction;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>satisfaction<sp/>is<sp/>capped<sp/>between<sp/>0<sp/>and<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>&gt;<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>satisfaction<sp/>falls<sp/>below<sp/>50,<sp/>request<sp/>government<sp/>assistance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>&lt;<sp/>50)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>requestDetails<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[Main]<sp/>Work<sp/>on<sp/>citizen<sp/>satisfaction&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCitizen_1a913dbea7ecf2b87951908c9554db652a" kindref="member">makeRequest</ref>(<ref refid="classCitizen_1ac88789754b747ec5746485055958d9fc" kindref="member">government</ref>,<sp/>requestDetails);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>satisfaction<sp/>is<sp/>now:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a67360b9651e7a5503c920eca85c0d79e" kindref="member">Citizen::setEmploymentStatus</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>employmentStatus)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCitizen_1ac790268bd01b8bf067ebac692ae51b17" kindref="member">isEmployed</ref><sp/>=<sp/>employmentStatus;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>employment<sp/>status<sp/>has<sp/>been<sp/>set<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(employmentStatus<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Employed&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Unemployed&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a1aa1eca1f2adfc51f109637b4c6c4892" kindref="member">Citizen::setPropertyOwnership</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ownsProperty)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ownsProperty<sp/>=<sp/><ref refid="classCitizen_1ac53f466a02e533acba8789b2397cc9b5" kindref="member">ownsProperty</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>property<sp/>ownership<sp/>status<sp/>has<sp/>been<sp/>set<sp/>to:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="classCitizen_1ac53f466a02e533acba8789b2397cc9b5" kindref="member">ownsProperty</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Owner&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>an<sp/>owner&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1ab34564a3430b1fa5574e4a4409b38115" kindref="member">Citizen::getSalary</ref>()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unemployed<sp/>citizens<sp/>get<sp/>grants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>effectiveSalary<sp/>=<sp/><ref refid="classCitizen_1ac790268bd01b8bf067ebac692ae51b17" kindref="member">isEmployed</ref><sp/>?<sp/><ref refid="classCitizen_1a9a6ce8a05dd2a1dc0cb7ea958f1ce873" kindref="member">salary</ref><sp/>:<sp/>3500.0f;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>effective<sp/>salary<sp/>is<sp/>$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>effectiveSalary<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>effectiveSalary;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1ac2d947f929d253b87b64485c9a7498c3" kindref="member">Citizen::setSalary</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newSalary)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCitizen_1a9a6ce8a05dd2a1dc0cb7ea958f1ce873" kindref="member">salary</ref><sp/>=<sp/>newSalary;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>salary<sp/>has<sp/>been<sp/>updated<sp/>to<sp/>$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1a9a6ce8a05dd2a1dc0cb7ea958f1ce873" kindref="member">salary</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a96e445dc5c4468d9c85faa49475c329a" kindref="member">Citizen::getAge</ref>()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classCitizen_1a9906c606bdbac44dcf4dc384c3a9d211" kindref="member">age</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">std::string<sp/><ref refid="classCitizen_1a6cb8c93c800efcb4abbfe25e63c68317" kindref="member">Citizen::getName</ref>()<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a0a875195b487daf901eceaf3e7dc6914" kindref="member">Citizen::getSatisfaction</ref>()</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a6af6fe4dae318e5747424c055a3b8bd9" kindref="member">Citizen::requestPublicService</ref>(std::string<sp/>serviceType,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>impact)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>requested<sp/>access<sp/>to<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>serviceType<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>service.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCitizen_1a68c89f916d8b94096d89d7b605e959cb" kindref="member">adjustCitizenSatisfaction</ref>(impact);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>satisfaction<sp/>after<sp/>using<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>serviceType<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>service<sp/>is<sp/>now<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a1c6324eadadad370567f8af2f6b04f27" kindref="member">Citizen::attendEvent</ref>(std::string<sp/>eventName,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>impact)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>attending<sp/>the<sp/>event:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eventName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCitizen_1a68c89f916d8b94096d89d7b605e959cb" kindref="member">adjustCitizenSatisfaction</ref>(impact);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>satisfaction<sp/>after<sp/>attending<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>eventName<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>now<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a264073daff7d319ecb2cd3ef06a794e9" kindref="member">Citizen::evaluateHappiness</ref>()<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>happiness<sp/>=<sp/><ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>+<sp/>(<ref refid="classCitizen_1a9a6ce8a05dd2a1dc0cb7ea958f1ce873" kindref="member">salary</ref><sp/>/<sp/>1000);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>based<sp/>on<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(happiness<sp/>&gt;<sp/>100.0f)<sp/>happiness<sp/>=<sp/>100.0f;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(happiness<sp/>&lt;<sp/>0.0f)<sp/>happiness<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;s<sp/>overall<sp/>happiness<sp/>level<sp/>is<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>happiness<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>happiness;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1acdf4737fdc5e63a32a7de1163bbbc09d" kindref="member">Citizen::displayDetails</ref>()<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n=====<sp/>Citizen<sp/>Details<sp/>=====&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1abca3f4db1b069d530bf26bb681d55e3e" kindref="member">name</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Age:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1a9906c606bdbac44dcf4dc384c3a9d211" kindref="member">age</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>years&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Employment<sp/>Status:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="classCitizen_1ac790268bd01b8bf067ebac692ae51b17" kindref="member">isEmployed</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Employed&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Unemployed&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Property<sp/>Ownership:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="classCitizen_1ac53f466a02e533acba8789b2397cc9b5" kindref="member">ownsProperty</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Owner&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>an<sp/>Owner&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Salary:<sp/>$&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(<ref refid="classCitizen_1ac790268bd01b8bf067ebac692ae51b17" kindref="member">isEmployed</ref><sp/>?<sp/><ref refid="classCitizen_1a9a6ce8a05dd2a1dc0cb7ea958f1ce873" kindref="member">salary</ref><sp/>:<sp/>3500.0f)<sp/>&lt;&lt;<sp/>std::endl;<sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Satisfaction:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>/<sp/>100&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Current<sp/>Tax<sp/>Rate:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1a523b77626b92a4a866ebf490dc3f7f35" kindref="member">currTaxRate</ref><sp/>*<sp/>100<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Overall<sp/>Happiness:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classCitizen_1a264073daff7d319ecb2cd3ef06a794e9" kindref="member">evaluateHappiness</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>/<sp/>100&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;===========================\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1a27e24c005f0d75caa6e33275c3dbc887" kindref="member">Citizen::getEmployementStatus</ref>()</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1ac790268bd01b8bf067ebac692ae51b17" kindref="member">isEmployed</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1aaa81a0d5850c26dcfdfd1ca6f808fa35" kindref="member">Citizen::getPropertyOwnershipStatus</ref>()</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classCitizen_1ac53f466a02e533acba8789b2397cc9b5" kindref="member">ownsProperty</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Citizen::getBalance()</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;balance;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Citizen::setBalance(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newBalance)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;balance<sp/>=<sp/>newBalance<sp/>;<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Citizen::setSatisfaction(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newSatisfaction)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCitizen_1aea3cc6285cd89f75061e680a17a3dd7e" kindref="member">satisfaction</ref><sp/>=<sp/>newSatisfaction<sp/>;<sp/></highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/Citizen.cpp"/>
  </compounddef>
</doxygen>
