<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="PopulationControl_8cpp" kind="file" language="C++">
    <compoundname>PopulationControl.cpp</compoundname>
    <includes refid="PopulationControl_8h" local="yes">PopulationControl.h</includes>
    <incdepgraph>
      <node id="2">
        <label>PopulationControl.h</label>
        <link refid="PopulationControl_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>CommercialBuilding.h</label>
        <link refid="CommercialBuilding_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Buildings.h</label>
        <link refid="Buildings_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="9">
        <label>State.h</label>
        <link refid="State_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="10">
        <label>UnderConstruction.h</label>
        <link refid="UnderConstruction_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>PublicServiceBuilding.h</label>
        <link refid="PublicServiceBuilding_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/PopulationControl.cpp</label>
        <link refid="PopulationControl_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>MedicalCenter.h</label>
        <link refid="MedicalCenter_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ResidentialBuilding.h</label>
        <link refid="ResidentialBuilding_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;PopulationControl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>maximum<sp/>population<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classPopulationControl_1a6042d94cf077dae8be734cefd5afd9fd" kindref="member">PopulationControl::MAX_POPULATION</ref><sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Migration<sp/>rate<sp/>multiplier<sp/>(5%<sp/>per<sp/>1000<sp/>jobs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>PopulationControl::MIGRATION_RATE_MULTIPLIER<sp/>=<sp/>0.05f;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructor<sp/>initializes<sp/>total<sp/>population<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="classPopulationControl_1a9cbb47a4eafa75880181bea13a966d6b" kindref="member">PopulationControl::PopulationControl</ref>()<sp/>:<sp/>totalPopulation(0)<sp/>{}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Destructor<sp/>deallocates<sp/>dynamically<sp/>allocated<sp/>buildings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="classPopulationControl_1aad0a98111a28fb0c88f8e1630e0c7c58" kindref="member">PopulationControl::~PopulationControl</ref>()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>total<sp/>population<sp/>based<sp/>on<sp/>the<sp/>new<sp/>building<sp/>being<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPopulationControl_1a0b75ec3579f92354070dc22f8af7de28" kindref="member">PopulationControl::updatePopulation</ref>(<ref refid="classResidentialBuilding" kindref="compound">ResidentialBuilding</ref>*<sp/>building)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buildingCapacity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(building-&gt;<ref refid="classResidentialBuilding_1aee6ea83d6f70ac8db9c5960db42e88b7" kindref="member">getBuildingType</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Residential&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buildingCapacity<sp/>=<sp/>building-&gt;<ref refid="classResidentialBuilding_1a3366ab094bbb6038393b5160eaa559b8" kindref="member">getCapacity</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>adding<sp/>this<sp/>building<sp/>will<sp/>exceed<sp/>the<sp/>maximum<sp/>population</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref><sp/>+<sp/>buildingCapacity<sp/>&lt;=<sp/><ref refid="classPopulationControl_1a6042d94cf077dae8be734cefd5afd9fd" kindref="member">MAX_POPULATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref><sp/>+=<sp/>buildingCapacity;<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buildings.push_back(building);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>add<sp/>building:<sp/>population<sp/>limit<sp/>exceeded!<sp/>Enforcing<sp/>population<sp/>policy.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enforcePopulationControl();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simulate<sp/>migration<sp/>based<sp/>on<sp/>jobs<sp/>created<sp/>for<sp/>commercial<sp/>buildings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCommercialBuilding" kindref="compound">CommercialBuilding</ref>*<sp/>commercialBuilding<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="normal"><ref refid="classCommercialBuilding" kindref="compound">CommercialBuilding</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(building))<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPopulationControl_1a21352ac64581f9f9bb339413fd1f8ea2" kindref="member">simulateMigration</ref>(commercialBuilding-&gt;getJobsCreated());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>current<sp/>total<sp/>population</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classPopulationControl_1a555ccf6e293d46e09d899397045552af" kindref="member">PopulationControl::getTotalPopulation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simulate<sp/>population<sp/>growth<sp/>based<sp/>on<sp/>births<sp/>from<sp/>medical<sp/>centers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPopulationControl_1a8f97b92c902501a54bd0f8756ca44387" kindref="member">PopulationControl::simulatePopulationGrowth</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>totalBirths<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classBuildings" kindref="compound">Buildings</ref>*<sp/>building<sp/>:<sp/>buildings)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classMedicalCenter" kindref="compound">MedicalCenter</ref>*<sp/>constHospital<sp/>=<sp/></highlight><highlight class="keyword">dynamic_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classMedicalCenter" kindref="compound">MedicalCenter</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(building))<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMedicalCenter" kindref="compound">MedicalCenter</ref>*<sp/>hospital<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="classMedicalCenter" kindref="compound">MedicalCenter</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(constHospital);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totalBirths<sp/>+=<sp/>hospital-&gt;<ref refid="classMedicalCenter_1a576620240d995a01356151b82688a47a" kindref="member">getBirthRate</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref><sp/>+=<sp/>totalBirths;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref><sp/>&gt;<sp/><ref refid="classPopulationControl_1a6042d94cf077dae8be734cefd5afd9fd" kindref="member">MAX_POPULATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enforcePopulationControl();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simulate<sp/>migration<sp/>based<sp/>on<sp/>jobs<sp/>created<sp/>in<sp/>commercial<sp/>buildings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classPopulationControl_1a21352ac64581f9f9bb339413fd1f8ea2" kindref="member">PopulationControl::simulateMigration</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jobsCreated)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>migrationEffect<sp/>=<sp/>calculateMigration(jobsCreated);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref><sp/>+=<sp/>migrationEffect;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref><sp/>&gt;<sp/><ref refid="classPopulationControl_1a6042d94cf077dae8be734cefd5afd9fd" kindref="member">MAX_POPULATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enforcePopulationControl();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calculate<sp/>migration<sp/>effect<sp/>based<sp/>on<sp/>jobs<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PopulationControl::calculateMigration(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jobsCreated)<sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(jobsCreated<sp/>*<sp/>MIGRATION_RATE_MULTIPLIER);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Enforce<sp/>population<sp/>control<sp/>policies<sp/>when<sp/>limits<sp/>are<sp/>exceeded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PopulationControl::enforcePopulationControl()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overflow<sp/>=<sp/><ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref><sp/>-<sp/><ref refid="classPopulationControl_1a6042d94cf077dae8be734cefd5afd9fd" kindref="member">MAX_POPULATION</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reduce<sp/>population<sp/>through<sp/>emigration<sp/>incentive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overflow<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>emigration<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(overflow<sp/>*<sp/>0.10f);<sp/></highlight><highlight class="comment">//<sp/>Emigrate<sp/>10%<sp/>of<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Population<sp/>exceeds<sp/>maximum<sp/>limit.<sp/>Emigrating<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>emigration<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>people.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref><sp/>-=<sp/>emigration;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>total<sp/>population<sp/>does<sp/>not<sp/>exceed<sp/>the<sp/>maximum<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref><sp/>&gt;<sp/><ref refid="classPopulationControl_1a6042d94cf077dae8be734cefd5afd9fd" kindref="member">MAX_POPULATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref><sp/>=<sp/><ref refid="classPopulationControl_1a6042d94cf077dae8be734cefd5afd9fd" kindref="member">MAX_POPULATION</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PopulationControl::increasePopulation()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classPopulationControl_1ad02435e5816a9905fa85b7f8f4f1d0e3" kindref="member">totalPopulation</ref>++;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/nev/cos214/Project/finalpush/Team-8-Design-Wits/System/PopulationControl.cpp"/>
  </compounddef>
</doxygen>
