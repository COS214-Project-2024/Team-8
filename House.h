#include "ResidentialBuilding.h"
#include <string>
using namespace std;

#ifndef HOUSE_H
#define HOUSE_H

/**
 * @class House
 * @brief Represents a house, inheriting from ResidentialBuilding.
 */
class House : public ResidentialBuilding {

protected:
    string buildingName;          /**< Name of the house. */
    string buildingType;          /**< Type of the house. */
    int capacity;                 /**< Capacity of the house. */
    Citizen* listOfCitizens;      /**< List of citizens residing in the house. */

    double maintenanceCost;       /**< Maintenance cost for the house. */
    int powerReq;                 /**< Power requirement of the house. */
    int waterReq;                 /**< Water requirement of the house. */
    int sewageCost;               /**< Sewage cost for the house. */
    int waste;                    /**< Waste generated by the house. */

    Utility* resources;  /**< Mediator for managing resources. */
    State* state;                 /**< Current state of the house. */

public:
    /**
     * @brief Constructs a House object with the specified attributes.
     * @param bName Name of the house.
     * @param pReq Power requirement.
     * @param wReq Water requirement.
     * @param mCost Maintenance cost.
     * @param sCost Sewage cost.
     * @param waste Waste generated by the house.
     * @param capacity Capacity of the house.
     */
    House(string bName, int pReq, int wReq, double mCost, int sCost, int waste, int capacity);

    /**
     * @brief Gets the type of the house.
     * @return The type of the building as a string.
     */
    virtual string getBuildingType();

    /**
     * @brief Gets the number of jobs created by the house.
     * @return The number of jobs as an integer.
     */
    virtual int getJobsCreated();

    /**
     * @brief Gets the maintenance cost of the house.
     * @return The maintenance cost as a double.
     */
    virtual double getMaintenanceCost();

    /**
     * @brief Gets the name of the house.
     * @return The name of the building as a string.
     */
    virtual string getName();

    /**
     * @brief Gets the power requirement of the house.
     * @return The power requirement as an integer.
     */
    virtual int getPowerReq();

    /**
     * @brief Gets the sewage cost of the house.
     * @return The sewage cost as an integer.
     */
    virtual int getSewageCost();

    /**
     * @brief Gets the water requirement of the house.
     * @return The water requirement as an integer.
     */
    virtual int getWaterReq();

    /**
     * @brief Requests the current state of the house.
     */
    virtual void requestState();

    /**
     * @brief Sets the state of the house.
     */
    void setState();

    /**
     * @brief Gets the list of residents in the house.
     * @return Pointer to the list of residents (Citizen objects).
     */
    Citizen* getListOfResidents();

    /**
     * @brief Gets the capacity of the house.
     * @return The capacity as an integer.
     */
    int getCapacity();

    /**
     * @brief Gets the waste cost for the house.
     * @return The waste cost as an integer.
     */
    int getWasteCost();

    /**
     * @brief sets the state of the building
     */
    void setState(State* newState);
    bool receiveWater() {
    // Implementation logic for receiving water
    return true;
}

bool payMaintenance() {
    // Implementation logic for paying maintenance
    return true;
}

bool cleanWaste() {
    // Implementation logic for cleaning waste
    return true;
}

bool cleanSewage() {
    // Implementation logic for cleaning sewage
    return true;
}
 bool receivePower(){
    return true;
 }
};

#endif
